// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// fast_ktau_cpp
double fast_ktau_cpp(const Eigen::MatrixXd& x, const Eigen::VectorXd& weights);
RcppExport SEXP _wdm_fast_ktau_cpp(SEXP xSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_ktau_cpp(x, weights));
    return rcpp_result_gen;
END_RCPP
}
// fast_hoeffd_cpp
double fast_hoeffd_cpp(const Eigen::MatrixXd& x, const Eigen::VectorXd& weights);
RcppExport SEXP _wdm_fast_hoeffd_cpp(SEXP xSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_hoeffd_cpp(x, weights));
    return rcpp_result_gen;
END_RCPP
}
// fast_hoeffd2_cpp
double fast_hoeffd2_cpp(const Eigen::MatrixXd& x, const Eigen::VectorXd& weights);
RcppExport SEXP _wdm_fast_hoeffd2_cpp(SEXP xSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_hoeffd2_cpp(x, weights));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wdm_fast_ktau_cpp", (DL_FUNC) &_wdm_fast_ktau_cpp, 2},
    {"_wdm_fast_hoeffd_cpp", (DL_FUNC) &_wdm_fast_hoeffd_cpp, 2},
    {"_wdm_fast_hoeffd2_cpp", (DL_FUNC) &_wdm_fast_hoeffd2_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_wdm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
